{
  "version": 3,
  "sources": ["../../wav-decoder/index.js"],
  "sourcesContent": ["\"use strict\";\n\nvar formats = {\n  0x0001: \"lpcm\",\n  0x0003: \"lpcm\"\n};\n\nfunction decodeSync(buffer, opts) {\n  opts = opts || {};\n\n  if (global.Buffer && buffer instanceof global.Buffer) {\n    buffer = Uint8Array.from(buffer).buffer;\n  }\n\n  var dataView = new DataView(buffer);\n  var reader = createReader(dataView);\n\n  if (reader.string(4) !== \"RIFF\") {\n    throw new TypeError(\"Invalid WAV file\");\n  }\n\n  reader.uint32(); // skip file length\n\n  if (reader.string(4) !== \"WAVE\") {\n    throw new TypeError(\"Invalid WAV file\");\n  }\n\n  var format = null;\n  var audioData = null;\n\n  do {\n    var chunkType = reader.string(4);\n    var chunkSize = reader.uint32();\n\n    switch (chunkType) {\n    case \"fmt \":\n      format = decodeFormat(reader, chunkSize);\n      if (format instanceof Error) {\n        throw format;\n      }\n      break;\n    case \"data\":\n      audioData = decodeData(reader, chunkSize, format, opts);\n      if (audioData instanceof Error) {\n        throw audioData;\n      }\n      break;\n    default:\n      reader.skip(chunkSize);\n      break;\n    }\n  } while (audioData === null);\n\n  return audioData;\n}\n\nfunction decode(buffer, opts) {\n  return new Promise(function(resolve) {\n    resolve(decodeSync(buffer, opts));\n  });\n}\n\nfunction decodeFormat(reader, chunkSize) {\n  var formatId = reader.uint16();\n\n  if (!formats.hasOwnProperty(formatId)) {\n    return new TypeError(\"Unsupported format in WAV file: 0x\" + formatId.toString(16));\n  }\n\n  var format = {\n    formatId: formatId,\n    floatingPoint: formatId === 0x0003,\n    numberOfChannels: reader.uint16(),\n    sampleRate: reader.uint32(),\n    byteRate: reader.uint32(),\n    blockSize: reader.uint16(),\n    bitDepth: reader.uint16()\n  };\n  reader.skip(chunkSize - 16);\n\n  return format;\n}\n\nfunction decodeData(reader, chunkSize, format, opts) {\n  chunkSize = Math.min(chunkSize, reader.remain());\n\n  var length = Math.floor(chunkSize / format.blockSize);\n  var numberOfChannels = format.numberOfChannels;\n  var sampleRate = format.sampleRate;\n  var channelData = new Array(numberOfChannels);\n\n  for (var ch = 0; ch < numberOfChannels; ch++) {\n    channelData[ch] = new Float32Array(length);\n  }\n\n  var retVal = readPCM(reader, channelData, length, format, opts);\n\n  if (retVal instanceof Error) {\n    return retVal;\n  }\n\n  return {\n    numberOfChannels: numberOfChannels,\n    length: length,\n    sampleRate: sampleRate,\n    channelData: channelData\n  };\n}\n\nfunction readPCM(reader, channelData, length, format, opts) {\n  var bitDepth = format.bitDepth;\n  var decoderOption = format.floatingPoint ? \"f\" : opts.symmetric ? \"s\" : \"\";\n  var methodName = \"pcm\" + bitDepth + decoderOption;\n\n  if (!reader[methodName]) {\n    return new TypeError(\"Not supported bit depth: \" + format.bitDepth);\n  }\n\n  var read = reader[methodName].bind(reader);\n  var numberOfChannels = format.numberOfChannels;\n\n  for (var i = 0; i < length; i++) {\n    for (var ch = 0; ch < numberOfChannels; ch++) {\n      channelData[ch][i] = read();\n    }\n  }\n\n  return null;\n}\n\nfunction createReader(dataView) {\n  var pos = 0;\n\n  return {\n    remain: function() {\n      return dataView.byteLength - pos;\n    },\n    skip: function(n) {\n      pos += n;\n    },\n    uint8: function() {\n      var data = dataView.getUint8(pos, true);\n\n      pos += 1;\n\n      return data;\n    },\n    int16: function() {\n      var data = dataView.getInt16(pos, true);\n\n      pos += 2;\n\n      return data;\n    },\n    uint16: function() {\n      var data = dataView.getUint16(pos, true);\n\n      pos += 2;\n\n      return data;\n    },\n    uint32: function() {\n      var data = dataView.getUint32(pos, true);\n\n      pos += 4;\n\n      return data;\n    },\n    string: function(n) {\n      var data = \"\";\n\n      for (var i = 0; i < n; i++) {\n        data += String.fromCharCode(this.uint8());\n      }\n\n      return data;\n    },\n    pcm8: function() {\n      var data = dataView.getUint8(pos) - 128;\n\n      pos += 1;\n\n      return data < 0 ? data / 128 : data / 127;\n    },\n    pcm8s: function() {\n      var data = dataView.getUint8(pos) - 127.5;\n\n      pos += 1;\n\n      return data / 127.5;\n    },\n    pcm16: function() {\n      var data = dataView.getInt16(pos, true);\n\n      pos += 2;\n\n      return data < 0 ? data / 32768 : data / 32767;\n    },\n    pcm16s: function() {\n      var data = dataView.getInt16(pos, true);\n\n      pos += 2;\n\n      return data / 32768;\n    },\n    pcm24: function() {\n      var x0 = dataView.getUint8(pos + 0);\n      var x1 = dataView.getUint8(pos + 1);\n      var x2 = dataView.getUint8(pos + 2);\n      var xx = (x0 + (x1 << 8) + (x2 << 16));\n      var data = xx > 0x800000 ? xx - 0x1000000 : xx;\n\n      pos += 3;\n\n      return data < 0 ? data / 8388608 : data / 8388607;\n    },\n    pcm24s: function() {\n      var x0 = dataView.getUint8(pos + 0);\n      var x1 = dataView.getUint8(pos + 1);\n      var x2 = dataView.getUint8(pos + 2);\n      var xx = (x0 + (x1 << 8) + (x2 << 16));\n      var data = xx > 0x800000 ? xx - 0x1000000 : xx;\n\n      pos += 3;\n\n      return data / 8388608;\n    },\n    pcm32: function() {\n      var data = dataView.getInt32(pos, true);\n\n      pos += 4;\n\n      return data < 0 ? data / 2147483648 : data / 2147483647;\n    },\n    pcm32s: function() {\n      var data = dataView.getInt32(pos, true);\n\n      pos += 4;\n\n      return data / 2147483648;\n    },\n    pcm32f: function() {\n      var data = dataView.getFloat32(pos, true);\n\n      pos += 4;\n\n      return data;\n    },\n    pcm64f: function() {\n      var data = dataView.getFloat64(pos, true);\n\n      pos += 8;\n\n      return data;\n    }\n  };\n}\n\nmodule.exports.decode = decode;\nmodule.exports.decode.sync = decodeSync;\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,QAAI,UAAU;AAAA,MACZ,GAAQ;AAAA,MACR,GAAQ;AAAA,IACV;AAEA,aAAS,WAAW,QAAQ,MAAM;AAChC,aAAO,QAAQ,CAAC;AAEhB,UAAI,OAAO,UAAU,kBAAkB,OAAO,QAAQ;AACpD,iBAAS,WAAW,KAAK,MAAM,EAAE;AAAA,MACnC;AAEA,UAAI,WAAW,IAAI,SAAS,MAAM;AAClC,UAAI,SAAS,aAAa,QAAQ;AAElC,UAAI,OAAO,OAAO,CAAC,MAAM,QAAQ;AAC/B,cAAM,IAAI,UAAU,kBAAkB;AAAA,MACxC;AAEA,aAAO,OAAO;AAEd,UAAI,OAAO,OAAO,CAAC,MAAM,QAAQ;AAC/B,cAAM,IAAI,UAAU,kBAAkB;AAAA,MACxC;AAEA,UAAI,SAAS;AACb,UAAI,YAAY;AAEhB,SAAG;AACD,YAAI,YAAY,OAAO,OAAO,CAAC;AAC/B,YAAI,YAAY,OAAO,OAAO;AAE9B,gBAAQ,WAAW;AAAA,UACnB,KAAK;AACH,qBAAS,aAAa,QAAQ,SAAS;AACvC,gBAAI,kBAAkB,OAAO;AAC3B,oBAAM;AAAA,YACR;AACA;AAAA,UACF,KAAK;AACH,wBAAY,WAAW,QAAQ,WAAW,QAAQ,IAAI;AACtD,gBAAI,qBAAqB,OAAO;AAC9B,oBAAM;AAAA,YACR;AACA;AAAA,UACF;AACE,mBAAO,KAAK,SAAS;AACrB;AAAA,QACF;AAAA,MACF,SAAS,cAAc;AAEvB,aAAO;AAAA,IACT;AAEA,aAAS,OAAO,QAAQ,MAAM;AAC5B,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,gBAAQ,WAAW,QAAQ,IAAI,CAAC;AAAA,MAClC,CAAC;AAAA,IACH;AAEA,aAAS,aAAa,QAAQ,WAAW;AACvC,UAAI,WAAW,OAAO,OAAO;AAE7B,UAAI,CAAC,QAAQ,eAAe,QAAQ,GAAG;AACrC,eAAO,IAAI,UAAU,uCAAuC,SAAS,SAAS,EAAE,CAAC;AAAA,MACnF;AAEA,UAAI,SAAS;AAAA,QACX;AAAA,QACA,eAAe,aAAa;AAAA,QAC5B,kBAAkB,OAAO,OAAO;AAAA,QAChC,YAAY,OAAO,OAAO;AAAA,QAC1B,UAAU,OAAO,OAAO;AAAA,QACxB,WAAW,OAAO,OAAO;AAAA,QACzB,UAAU,OAAO,OAAO;AAAA,MAC1B;AACA,aAAO,KAAK,YAAY,EAAE;AAE1B,aAAO;AAAA,IACT;AAEA,aAAS,WAAW,QAAQ,WAAW,QAAQ,MAAM;AACnD,kBAAY,KAAK,IAAI,WAAW,OAAO,OAAO,CAAC;AAE/C,UAAI,SAAS,KAAK,MAAM,YAAY,OAAO,SAAS;AACpD,UAAI,mBAAmB,OAAO;AAC9B,UAAI,aAAa,OAAO;AACxB,UAAI,cAAc,IAAI,MAAM,gBAAgB;AAE5C,eAAS,KAAK,GAAG,KAAK,kBAAkB,MAAM;AAC5C,oBAAY,EAAE,IAAI,IAAI,aAAa,MAAM;AAAA,MAC3C;AAEA,UAAI,SAAS,QAAQ,QAAQ,aAAa,QAAQ,QAAQ,IAAI;AAE9D,UAAI,kBAAkB,OAAO;AAC3B,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,aAAS,QAAQ,QAAQ,aAAa,QAAQ,QAAQ,MAAM;AAC1D,UAAI,WAAW,OAAO;AACtB,UAAI,gBAAgB,OAAO,gBAAgB,MAAM,KAAK,YAAY,MAAM;AACxE,UAAI,aAAa,QAAQ,WAAW;AAEpC,UAAI,CAAC,OAAO,UAAU,GAAG;AACvB,eAAO,IAAI,UAAU,8BAA8B,OAAO,QAAQ;AAAA,MACpE;AAEA,UAAI,OAAO,OAAO,UAAU,EAAE,KAAK,MAAM;AACzC,UAAI,mBAAmB,OAAO;AAE9B,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,iBAAS,KAAK,GAAG,KAAK,kBAAkB,MAAM;AAC5C,sBAAY,EAAE,EAAE,CAAC,IAAI,KAAK;AAAA,QAC5B;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,aAAa,UAAU;AAC9B,UAAI,MAAM;AAEV,aAAO;AAAA,QACL,QAAQ,WAAW;AACjB,iBAAO,SAAS,aAAa;AAAA,QAC/B;AAAA,QACA,MAAM,SAAS,GAAG;AAChB,iBAAO;AAAA,QACT;AAAA,QACA,OAAO,WAAW;AAChB,cAAI,OAAO,SAAS,SAAS,KAAK,IAAI;AAEtC,iBAAO;AAEP,iBAAO;AAAA,QACT;AAAA,QACA,OAAO,WAAW;AAChB,cAAI,OAAO,SAAS,SAAS,KAAK,IAAI;AAEtC,iBAAO;AAEP,iBAAO;AAAA,QACT;AAAA,QACA,QAAQ,WAAW;AACjB,cAAI,OAAO,SAAS,UAAU,KAAK,IAAI;AAEvC,iBAAO;AAEP,iBAAO;AAAA,QACT;AAAA,QACA,QAAQ,WAAW;AACjB,cAAI,OAAO,SAAS,UAAU,KAAK,IAAI;AAEvC,iBAAO;AAEP,iBAAO;AAAA,QACT;AAAA,QACA,QAAQ,SAAS,GAAG;AAClB,cAAI,OAAO;AAEX,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,oBAAQ,OAAO,aAAa,KAAK,MAAM,CAAC;AAAA,UAC1C;AAEA,iBAAO;AAAA,QACT;AAAA,QACA,MAAM,WAAW;AACf,cAAI,OAAO,SAAS,SAAS,GAAG,IAAI;AAEpC,iBAAO;AAEP,iBAAO,OAAO,IAAI,OAAO,MAAM,OAAO;AAAA,QACxC;AAAA,QACA,OAAO,WAAW;AAChB,cAAI,OAAO,SAAS,SAAS,GAAG,IAAI;AAEpC,iBAAO;AAEP,iBAAO,OAAO;AAAA,QAChB;AAAA,QACA,OAAO,WAAW;AAChB,cAAI,OAAO,SAAS,SAAS,KAAK,IAAI;AAEtC,iBAAO;AAEP,iBAAO,OAAO,IAAI,OAAO,QAAQ,OAAO;AAAA,QAC1C;AAAA,QACA,QAAQ,WAAW;AACjB,cAAI,OAAO,SAAS,SAAS,KAAK,IAAI;AAEtC,iBAAO;AAEP,iBAAO,OAAO;AAAA,QAChB;AAAA,QACA,OAAO,WAAW;AAChB,cAAI,KAAK,SAAS,SAAS,MAAM,CAAC;AAClC,cAAI,KAAK,SAAS,SAAS,MAAM,CAAC;AAClC,cAAI,KAAK,SAAS,SAAS,MAAM,CAAC;AAClC,cAAI,KAAM,MAAM,MAAM,MAAM,MAAM;AAClC,cAAI,OAAO,KAAK,UAAW,KAAK,WAAY;AAE5C,iBAAO;AAEP,iBAAO,OAAO,IAAI,OAAO,UAAU,OAAO;AAAA,QAC5C;AAAA,QACA,QAAQ,WAAW;AACjB,cAAI,KAAK,SAAS,SAAS,MAAM,CAAC;AAClC,cAAI,KAAK,SAAS,SAAS,MAAM,CAAC;AAClC,cAAI,KAAK,SAAS,SAAS,MAAM,CAAC;AAClC,cAAI,KAAM,MAAM,MAAM,MAAM,MAAM;AAClC,cAAI,OAAO,KAAK,UAAW,KAAK,WAAY;AAE5C,iBAAO;AAEP,iBAAO,OAAO;AAAA,QAChB;AAAA,QACA,OAAO,WAAW;AAChB,cAAI,OAAO,SAAS,SAAS,KAAK,IAAI;AAEtC,iBAAO;AAEP,iBAAO,OAAO,IAAI,OAAO,aAAa,OAAO;AAAA,QAC/C;AAAA,QACA,QAAQ,WAAW;AACjB,cAAI,OAAO,SAAS,SAAS,KAAK,IAAI;AAEtC,iBAAO;AAEP,iBAAO,OAAO;AAAA,QAChB;AAAA,QACA,QAAQ,WAAW;AACjB,cAAI,OAAO,SAAS,WAAW,KAAK,IAAI;AAExC,iBAAO;AAEP,iBAAO;AAAA,QACT;AAAA,QACA,QAAQ,WAAW;AACjB,cAAI,OAAO,SAAS,WAAW,KAAK,IAAI;AAExC,iBAAO;AAEP,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAEA,WAAO,QAAQ,SAAS;AACxB,WAAO,QAAQ,OAAO,OAAO;AAAA;AAAA;",
  "names": []
}
